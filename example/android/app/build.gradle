plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProps = new Properties()
def lpFile = rootProject.file("local.properties")
if (lpFile.exists()) {
    lpFile.withInputStream { localProps.load(it) }
}
def flutterVersionCode = (localProps.getProperty("flutter.versionCode") ?: "1").toInteger()
def flutterVersionName = localProps.getProperty("flutter.versionName") ?: "1.0.0"
def flutterNdkVersion = localProps.getProperty("flutter.ndkVersion") ?: "28.1.13356709"
android {

    lint {
        disable += ["PropertyEscape"]   // turn off just this check
    }

    namespace "me.getbehind.testApp"
    compileSdk = 35
    ndkVersion = flutterNdkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    defaultConfig {
        applicationId = "me.getbehind.testApp"
        minSdk = 21
        targetSdk = 35
        versionCode = 1
        versionName = '1.0.0'
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
